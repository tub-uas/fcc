// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataSFusion.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _DATASFUSION_H_
#define _DATASFUSION_H_


#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DataSFusion_SOURCE)
#define DataSFusion_DllAPI __declspec( dllexport )
#else
#define DataSFusion_DllAPI __declspec( dllimport )
#endif // DataSFusion_SOURCE
#else
#define DataSFusion_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define DataSFusion_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure DataSFusion defined by the user in the IDL file.
 * @ingroup DATASFUSION
 */
class DataSFusion
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport DataSFusion();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~DataSFusion();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion(
            const DataSFusion& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion(
            DataSFusion&& x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion& operator =(
            const DataSFusion& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion& operator =(
            DataSFusion&& x);

    /*!
     * @brief This function sets a value in member time
     * @param _time New value for member time
     */
    eProsima_user_DllExport void time(
            uint64_t _time);

    /*!
     * @brief This function returns the value of member time
     * @return Value of member time
     */
    eProsima_user_DllExport uint64_t time() const;

    /*!
     * @brief This function returns a reference to member time
     * @return Reference to member time
     */
    eProsima_user_DllExport uint64_t& time();

    /*!
     * @brief This function sets a value in member gyrX
     * @param _gyrX New value for member gyrX
     */
    eProsima_user_DllExport void gyrX(
            float _gyrX);

    /*!
     * @brief This function returns the value of member gyrX
     * @return Value of member gyrX
     */
    eProsima_user_DllExport float gyrX() const;

    /*!
     * @brief This function returns a reference to member gyrX
     * @return Reference to member gyrX
     */
    eProsima_user_DllExport float& gyrX();

    /*!
     * @brief This function sets a value in member gyrY
     * @param _gyrY New value for member gyrY
     */
    eProsima_user_DllExport void gyrY(
            float _gyrY);

    /*!
     * @brief This function returns the value of member gyrY
     * @return Value of member gyrY
     */
    eProsima_user_DllExport float gyrY() const;

    /*!
     * @brief This function returns a reference to member gyrY
     * @return Reference to member gyrY
     */
    eProsima_user_DllExport float& gyrY();

    /*!
     * @brief This function sets a value in member gyrZ
     * @param _gyrZ New value for member gyrZ
     */
    eProsima_user_DllExport void gyrZ(
            float _gyrZ);

    /*!
     * @brief This function returns the value of member gyrZ
     * @return Value of member gyrZ
     */
    eProsima_user_DllExport float gyrZ() const;

    /*!
     * @brief This function returns a reference to member gyrZ
     * @return Reference to member gyrZ
     */
    eProsima_user_DllExport float& gyrZ();

    /*!
     * @brief This function sets a value in member accX
     * @param _accX New value for member accX
     */
    eProsima_user_DllExport void accX(
            float _accX);

    /*!
     * @brief This function returns the value of member accX
     * @return Value of member accX
     */
    eProsima_user_DllExport float accX() const;

    /*!
     * @brief This function returns a reference to member accX
     * @return Reference to member accX
     */
    eProsima_user_DllExport float& accX();

    /*!
     * @brief This function sets a value in member accY
     * @param _accY New value for member accY
     */
    eProsima_user_DllExport void accY(
            float _accY);

    /*!
     * @brief This function returns the value of member accY
     * @return Value of member accY
     */
    eProsima_user_DllExport float accY() const;

    /*!
     * @brief This function returns a reference to member accY
     * @return Reference to member accY
     */
    eProsima_user_DllExport float& accY();

    /*!
     * @brief This function sets a value in member accZ
     * @param _accZ New value for member accZ
     */
    eProsima_user_DllExport void accZ(
            float _accZ);

    /*!
     * @brief This function returns the value of member accZ
     * @return Value of member accZ
     */
    eProsima_user_DllExport float accZ() const;

    /*!
     * @brief This function returns a reference to member accZ
     * @return Reference to member accZ
     */
    eProsima_user_DllExport float& accZ();

    /*!
     * @brief This function sets a value in member magX
     * @param _magX New value for member magX
     */
    eProsima_user_DllExport void magX(
            float _magX);

    /*!
     * @brief This function returns the value of member magX
     * @return Value of member magX
     */
    eProsima_user_DllExport float magX() const;

    /*!
     * @brief This function returns a reference to member magX
     * @return Reference to member magX
     */
    eProsima_user_DllExport float& magX();

    /*!
     * @brief This function sets a value in member magY
     * @param _magY New value for member magY
     */
    eProsima_user_DllExport void magY(
            float _magY);

    /*!
     * @brief This function returns the value of member magY
     * @return Value of member magY
     */
    eProsima_user_DllExport float magY() const;

    /*!
     * @brief This function returns a reference to member magY
     * @return Reference to member magY
     */
    eProsima_user_DllExport float& magY();

    /*!
     * @brief This function sets a value in member magZ
     * @param _magZ New value for member magZ
     */
    eProsima_user_DllExport void magZ(
            float _magZ);

    /*!
     * @brief This function returns the value of member magZ
     * @return Value of member magZ
     */
    eProsima_user_DllExport float magZ() const;

    /*!
     * @brief This function returns a reference to member magZ
     * @return Reference to member magZ
     */
    eProsima_user_DllExport float& magZ();

    /*!
     * @brief This function sets a value in member temp
     * @param _temp New value for member temp
     */
    eProsima_user_DllExport void temp(
            float _temp);

    /*!
     * @brief This function returns the value of member temp
     * @return Value of member temp
     */
    eProsima_user_DllExport float temp() const;

    /*!
     * @brief This function returns a reference to member temp
     * @return Reference to member temp
     */
    eProsima_user_DllExport float& temp();

    /*!
     * @brief This function sets a value in member press
     * @param _press New value for member press
     */
    eProsima_user_DllExport void press(
            float _press);

    /*!
     * @brief This function returns the value of member press
     * @return Value of member press
     */
    eProsima_user_DllExport float press() const;

    /*!
     * @brief This function returns a reference to member press
     * @return Reference to member press
     */
    eProsima_user_DllExport float& press();

    /*!
     * @brief This function sets a value in member phi
     * @param _phi New value for member phi
     */
    eProsima_user_DllExport void phi(
            float _phi);

    /*!
     * @brief This function returns the value of member phi
     * @return Value of member phi
     */
    eProsima_user_DllExport float phi() const;

    /*!
     * @brief This function returns a reference to member phi
     * @return Reference to member phi
     */
    eProsima_user_DllExport float& phi();

    /*!
     * @brief This function sets a value in member the
     * @param _the New value for member the
     */
    eProsima_user_DllExport void the(
            float _the);

    /*!
     * @brief This function returns the value of member the
     * @return Value of member the
     */
    eProsima_user_DllExport float the() const;

    /*!
     * @brief This function returns a reference to member the
     * @return Reference to member the
     */
    eProsima_user_DllExport float& the();

    /*!
     * @brief This function sets a value in member psi
     * @param _psi New value for member psi
     */
    eProsima_user_DllExport void psi(
            float _psi);

    /*!
     * @brief This function returns the value of member psi
     * @return Value of member psi
     */
    eProsima_user_DllExport float psi() const;

    /*!
     * @brief This function returns a reference to member psi
     * @return Reference to member psi
     */
    eProsima_user_DllExport float& psi();

    /*!
     * @brief This function sets a value in member q0
     * @param _q0 New value for member q0
     */
    eProsima_user_DllExport void q0(
            float _q0);

    /*!
     * @brief This function returns the value of member q0
     * @return Value of member q0
     */
    eProsima_user_DllExport float q0() const;

    /*!
     * @brief This function returns a reference to member q0
     * @return Reference to member q0
     */
    eProsima_user_DllExport float& q0();

    /*!
     * @brief This function sets a value in member q1
     * @param _q1 New value for member q1
     */
    eProsima_user_DllExport void q1(
            float _q1);

    /*!
     * @brief This function returns the value of member q1
     * @return Value of member q1
     */
    eProsima_user_DllExport float q1() const;

    /*!
     * @brief This function returns a reference to member q1
     * @return Reference to member q1
     */
    eProsima_user_DllExport float& q1();

    /*!
     * @brief This function sets a value in member q2
     * @param _q2 New value for member q2
     */
    eProsima_user_DllExport void q2(
            float _q2);

    /*!
     * @brief This function returns the value of member q2
     * @return Value of member q2
     */
    eProsima_user_DllExport float q2() const;

    /*!
     * @brief This function returns a reference to member q2
     * @return Reference to member q2
     */
    eProsima_user_DllExport float& q2();

    /*!
     * @brief This function sets a value in member q3
     * @param _q3 New value for member q3
     */
    eProsima_user_DllExport void q3(
            float _q3);

    /*!
     * @brief This function returns the value of member q3
     * @return Value of member q3
     */
    eProsima_user_DllExport float q3() const;

    /*!
     * @brief This function returns a reference to member q3
     * @return Reference to member q3
     */
    eProsima_user_DllExport float& q3();

    /*!
     * @brief This function sets a value in member posN
     * @param _posN New value for member posN
     */
    eProsima_user_DllExport void posN(
            float _posN);

    /*!
     * @brief This function returns the value of member posN
     * @return Value of member posN
     */
    eProsima_user_DllExport float posN() const;

    /*!
     * @brief This function returns a reference to member posN
     * @return Reference to member posN
     */
    eProsima_user_DllExport float& posN();

    /*!
     * @brief This function sets a value in member posE
     * @param _posE New value for member posE
     */
    eProsima_user_DllExport void posE(
            float _posE);

    /*!
     * @brief This function returns the value of member posE
     * @return Value of member posE
     */
    eProsima_user_DllExport float posE() const;

    /*!
     * @brief This function returns a reference to member posE
     * @return Reference to member posE
     */
    eProsima_user_DllExport float& posE();

    /*!
     * @brief This function sets a value in member posD
     * @param _posD New value for member posD
     */
    eProsima_user_DllExport void posD(
            float _posD);

    /*!
     * @brief This function returns the value of member posD
     * @return Value of member posD
     */
    eProsima_user_DllExport float posD() const;

    /*!
     * @brief This function returns a reference to member posD
     * @return Reference to member posD
     */
    eProsima_user_DllExport float& posD();

    /*!
     * @brief This function sets a value in member speedN
     * @param _speedN New value for member speedN
     */
    eProsima_user_DllExport void speedN(
            float _speedN);

    /*!
     * @brief This function returns the value of member speedN
     * @return Value of member speedN
     */
    eProsima_user_DllExport float speedN() const;

    /*!
     * @brief This function returns a reference to member speedN
     * @return Reference to member speedN
     */
    eProsima_user_DllExport float& speedN();

    /*!
     * @brief This function sets a value in member speedE
     * @param _speedE New value for member speedE
     */
    eProsima_user_DllExport void speedE(
            float _speedE);

    /*!
     * @brief This function returns the value of member speedE
     * @return Value of member speedE
     */
    eProsima_user_DllExport float speedE() const;

    /*!
     * @brief This function returns a reference to member speedE
     * @return Reference to member speedE
     */
    eProsima_user_DllExport float& speedE();

    /*!
     * @brief This function sets a value in member speedD
     * @param _speedD New value for member speedD
     */
    eProsima_user_DllExport void speedD(
            float _speedD);

    /*!
     * @brief This function returns the value of member speedD
     * @return Value of member speedD
     */
    eProsima_user_DllExport float speedD() const;

    /*!
     * @brief This function returns a reference to member speedD
     * @return Reference to member speedD
     */
    eProsima_user_DllExport float& speedD();

    /*!
     * @brief This function sets a value in member windN
     * @param _windN New value for member windN
     */
    eProsima_user_DllExport void windN(
            float _windN);

    /*!
     * @brief This function returns the value of member windN
     * @return Value of member windN
     */
    eProsima_user_DllExport float windN() const;

    /*!
     * @brief This function returns a reference to member windN
     * @return Reference to member windN
     */
    eProsima_user_DllExport float& windN();

    /*!
     * @brief This function sets a value in member windE
     * @param _windE New value for member windE
     */
    eProsima_user_DllExport void windE(
            float _windE);

    /*!
     * @brief This function returns the value of member windE
     * @return Value of member windE
     */
    eProsima_user_DllExport float windE() const;

    /*!
     * @brief This function returns a reference to member windE
     * @return Reference to member windE
     */
    eProsima_user_DllExport float& windE();

    /*!
     * @brief This function sets a value in member windD
     * @param _windD New value for member windD
     */
    eProsima_user_DllExport void windD(
            float _windD);

    /*!
     * @brief This function returns the value of member windD
     * @return Value of member windD
     */
    eProsima_user_DllExport float windD() const;

    /*!
     * @brief This function returns a reference to member windD
     * @return Reference to member windD
     */
    eProsima_user_DllExport float& windD();

    /*!
     * @brief This function sets a value in member ssa
     * @param _ssa New value for member ssa
     */
    eProsima_user_DllExport void ssa(
            float _ssa);

    /*!
     * @brief This function returns the value of member ssa
     * @return Value of member ssa
     */
    eProsima_user_DllExport float ssa() const;

    /*!
     * @brief This function returns a reference to member ssa
     * @return Reference to member ssa
     */
    eProsima_user_DllExport float& ssa();

    /*!
     * @brief This function sets a value in member aoa
     * @param _aoa New value for member aoa
     */
    eProsima_user_DllExport void aoa(
            float _aoa);

    /*!
     * @brief This function returns the value of member aoa
     * @return Value of member aoa
     */
    eProsima_user_DllExport float aoa() const;

    /*!
     * @brief This function returns a reference to member aoa
     * @return Reference to member aoa
     */
    eProsima_user_DllExport float& aoa();

    /*!
     * @brief This function sets a value in member gamma
     * @param _gamma New value for member gamma
     */
    eProsima_user_DllExport void gamma(
            float _gamma);

    /*!
     * @brief This function returns the value of member gamma
     * @return Value of member gamma
     */
    eProsima_user_DllExport float gamma() const;

    /*!
     * @brief This function returns a reference to member gamma
     * @return Reference to member gamma
     */
    eProsima_user_DllExport float& gamma();

    /*!
     * @brief This function sets a value in member alive
     * @param _alive New value for member alive
     */
    eProsima_user_DllExport void alive(
            bool _alive);

    /*!
     * @brief This function returns the value of member alive
     * @return Value of member alive
     */
    eProsima_user_DllExport bool alive() const;

    /*!
     * @brief This function returns a reference to member alive
     * @return Reference to member alive
     */
    eProsima_user_DllExport bool& alive();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const DataSFusion& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    uint64_t m_time;
    float m_gyrX;
    float m_gyrY;
    float m_gyrZ;
    float m_accX;
    float m_accY;
    float m_accZ;
    float m_magX;
    float m_magY;
    float m_magZ;
    float m_temp;
    float m_press;
    float m_phi;
    float m_the;
    float m_psi;
    float m_q0;
    float m_q1;
    float m_q2;
    float m_q3;
    float m_posN;
    float m_posE;
    float m_posD;
    float m_speedN;
    float m_speedE;
    float m_speedD;
    float m_windN;
    float m_windE;
    float m_windD;
    float m_ssa;
    float m_aoa;
    float m_gamma;
    bool m_alive;
};

#endif // _DATASFUSION_H_