// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataAhrs.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _DATAAHRS_H_
#define _DATAAHRS_H_


#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DataAhrs_SOURCE)
#define DataAhrs_DllAPI __declspec( dllexport )
#else
#define DataAhrs_DllAPI __declspec( dllimport )
#endif // DataAhrs_SOURCE
#else
#define DataAhrs_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define DataAhrs_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure DataAhrs defined by the user in the IDL file.
 * @ingroup DATAAHRS
 */
class DataAhrs
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport DataAhrs();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~DataAhrs();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DataAhrs that will be copied.
     */
    eProsima_user_DllExport DataAhrs(
            const DataAhrs& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DataAhrs that will be copied.
     */
    eProsima_user_DllExport DataAhrs(
            DataAhrs&& x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DataAhrs that will be copied.
     */
    eProsima_user_DllExport DataAhrs& operator =(
            const DataAhrs& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DataAhrs that will be copied.
     */
    eProsima_user_DllExport DataAhrs& operator =(
            DataAhrs&& x);

    /*!
     * @brief This function sets a value in member time
     * @param _time New value for member time
     */
    eProsima_user_DllExport void time(
            uint64_t _time);

    /*!
     * @brief This function returns the value of member time
     * @return Value of member time
     */
    eProsima_user_DllExport uint64_t time() const;

    /*!
     * @brief This function returns a reference to member time
     * @return Reference to member time
     */
    eProsima_user_DllExport uint64_t& time();

    /*!
     * @brief This function sets a value in member senseTime
     * @param _senseTime New value for member senseTime
     */
    eProsima_user_DllExport void senseTime(
            double _senseTime);

    /*!
     * @brief This function returns the value of member senseTime
     * @return Value of member senseTime
     */
    eProsima_user_DllExport double senseTime() const;

    /*!
     * @brief This function returns a reference to member senseTime
     * @return Reference to member senseTime
     */
    eProsima_user_DllExport double& senseTime();

    /*!
     * @brief This function sets a value in member gyrX
     * @param _gyrX New value for member gyrX
     */
    eProsima_user_DllExport void gyrX(
            double _gyrX);

    /*!
     * @brief This function returns the value of member gyrX
     * @return Value of member gyrX
     */
    eProsima_user_DllExport double gyrX() const;

    /*!
     * @brief This function returns a reference to member gyrX
     * @return Reference to member gyrX
     */
    eProsima_user_DllExport double& gyrX();

    /*!
     * @brief This function sets a value in member gyrY
     * @param _gyrY New value for member gyrY
     */
    eProsima_user_DllExport void gyrY(
            double _gyrY);

    /*!
     * @brief This function returns the value of member gyrY
     * @return Value of member gyrY
     */
    eProsima_user_DllExport double gyrY() const;

    /*!
     * @brief This function returns a reference to member gyrY
     * @return Reference to member gyrY
     */
    eProsima_user_DllExport double& gyrY();

    /*!
     * @brief This function sets a value in member gyrZ
     * @param _gyrZ New value for member gyrZ
     */
    eProsima_user_DllExport void gyrZ(
            double _gyrZ);

    /*!
     * @brief This function returns the value of member gyrZ
     * @return Value of member gyrZ
     */
    eProsima_user_DllExport double gyrZ() const;

    /*!
     * @brief This function returns a reference to member gyrZ
     * @return Reference to member gyrZ
     */
    eProsima_user_DllExport double& gyrZ();

    /*!
     * @brief This function sets a value in member accX
     * @param _accX New value for member accX
     */
    eProsima_user_DllExport void accX(
            double _accX);

    /*!
     * @brief This function returns the value of member accX
     * @return Value of member accX
     */
    eProsima_user_DllExport double accX() const;

    /*!
     * @brief This function returns a reference to member accX
     * @return Reference to member accX
     */
    eProsima_user_DllExport double& accX();

    /*!
     * @brief This function sets a value in member accY
     * @param _accY New value for member accY
     */
    eProsima_user_DllExport void accY(
            double _accY);

    /*!
     * @brief This function returns the value of member accY
     * @return Value of member accY
     */
    eProsima_user_DllExport double accY() const;

    /*!
     * @brief This function returns a reference to member accY
     * @return Reference to member accY
     */
    eProsima_user_DllExport double& accY();

    /*!
     * @brief This function sets a value in member accZ
     * @param _accZ New value for member accZ
     */
    eProsima_user_DllExport void accZ(
            double _accZ);

    /*!
     * @brief This function returns the value of member accZ
     * @return Value of member accZ
     */
    eProsima_user_DllExport double accZ() const;

    /*!
     * @brief This function returns a reference to member accZ
     * @return Reference to member accZ
     */
    eProsima_user_DllExport double& accZ();

    /*!
     * @brief This function sets a value in member magX
     * @param _magX New value for member magX
     */
    eProsima_user_DllExport void magX(
            double _magX);

    /*!
     * @brief This function returns the value of member magX
     * @return Value of member magX
     */
    eProsima_user_DllExport double magX() const;

    /*!
     * @brief This function returns a reference to member magX
     * @return Reference to member magX
     */
    eProsima_user_DllExport double& magX();

    /*!
     * @brief This function sets a value in member magY
     * @param _magY New value for member magY
     */
    eProsima_user_DllExport void magY(
            double _magY);

    /*!
     * @brief This function returns the value of member magY
     * @return Value of member magY
     */
    eProsima_user_DllExport double magY() const;

    /*!
     * @brief This function returns a reference to member magY
     * @return Reference to member magY
     */
    eProsima_user_DllExport double& magY();

    /*!
     * @brief This function sets a value in member magZ
     * @param _magZ New value for member magZ
     */
    eProsima_user_DllExport void magZ(
            double _magZ);

    /*!
     * @brief This function returns the value of member magZ
     * @return Value of member magZ
     */
    eProsima_user_DllExport double magZ() const;

    /*!
     * @brief This function returns a reference to member magZ
     * @return Reference to member magZ
     */
    eProsima_user_DllExport double& magZ();

    /*!
     * @brief This function sets a value in member temperature
     * @param _temperature New value for member temperature
     */
    eProsima_user_DllExport void temperature(
            double _temperature);

    /*!
     * @brief This function returns the value of member temperature
     * @return Value of member temperature
     */
    eProsima_user_DllExport double temperature() const;

    /*!
     * @brief This function returns a reference to member temperature
     * @return Reference to member temperature
     */
    eProsima_user_DllExport double& temperature();

    /*!
     * @brief This function sets a value in member barometric_pressure
     * @param _barometric_pressure New value for member barometric_pressure
     */
    eProsima_user_DllExport void barometric_pressure(
            double _barometric_pressure);

    /*!
     * @brief This function returns the value of member barometric_pressure
     * @return Value of member barometric_pressure
     */
    eProsima_user_DllExport double barometric_pressure() const;

    /*!
     * @brief This function returns a reference to member barometric_pressure
     * @return Reference to member barometric_pressure
     */
    eProsima_user_DllExport double& barometric_pressure();

    /*!
     * @brief This function sets a value in member phi
     * @param _phi New value for member phi
     */
    eProsima_user_DllExport void phi(
            double _phi);

    /*!
     * @brief This function returns the value of member phi
     * @return Value of member phi
     */
    eProsima_user_DllExport double phi() const;

    /*!
     * @brief This function returns a reference to member phi
     * @return Reference to member phi
     */
    eProsima_user_DllExport double& phi();

    /*!
     * @brief This function sets a value in member the
     * @param _the New value for member the
     */
    eProsima_user_DllExport void the(
            double _the);

    /*!
     * @brief This function returns the value of member the
     * @return Value of member the
     */
    eProsima_user_DllExport double the() const;

    /*!
     * @brief This function returns a reference to member the
     * @return Reference to member the
     */
    eProsima_user_DllExport double& the();

    /*!
     * @brief This function sets a value in member psi
     * @param _psi New value for member psi
     */
    eProsima_user_DllExport void psi(
            double _psi);

    /*!
     * @brief This function returns the value of member psi
     * @return Value of member psi
     */
    eProsima_user_DllExport double psi() const;

    /*!
     * @brief This function returns a reference to member psi
     * @return Reference to member psi
     */
    eProsima_user_DllExport double& psi();

    /*!
     * @brief This function sets a value in member alive
     * @param _alive New value for member alive
     */
    eProsima_user_DllExport void alive(
            bool _alive);

    /*!
     * @brief This function returns the value of member alive
     * @return Value of member alive
     */
    eProsima_user_DllExport bool alive() const;

    /*!
     * @brief This function returns a reference to member alive
     * @return Reference to member alive
     */
    eProsima_user_DllExport bool& alive();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const DataAhrs& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    uint64_t m_time;
    double m_senseTime;
    double m_gyrX;
    double m_gyrY;
    double m_gyrZ;
    double m_accX;
    double m_accY;
    double m_accZ;
    double m_magX;
    double m_magY;
    double m_magZ;
    double m_temperature;
    double m_barometric_pressure;
    double m_phi;
    double m_the;
    double m_psi;
    bool m_alive;
};

#endif // _DATAAHRS_H_