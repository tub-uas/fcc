// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataWatchdog.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _DATAWATCHDOG_H_
#define _DATAWATCHDOG_H_


#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DataWatchdog_SOURCE)
#define DataWatchdog_DllAPI __declspec( dllexport )
#else
#define DataWatchdog_DllAPI __declspec( dllimport )
#endif // DataWatchdog_SOURCE
#else
#define DataWatchdog_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define DataWatchdog_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure DataWatchdog defined by the user in the IDL file.
 * @ingroup DATAWATCHDOG
 */
class DataWatchdog
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport DataWatchdog();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~DataWatchdog();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DataWatchdog that will be copied.
     */
    eProsima_user_DllExport DataWatchdog(
            const DataWatchdog& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DataWatchdog that will be copied.
     */
    eProsima_user_DllExport DataWatchdog(
            DataWatchdog&& x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DataWatchdog that will be copied.
     */
    eProsima_user_DllExport DataWatchdog& operator =(
            const DataWatchdog& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DataWatchdog that will be copied.
     */
    eProsima_user_DllExport DataWatchdog& operator =(
            DataWatchdog&& x);

    /*!
     * @brief This function sets a value in member time
     * @param _time New value for member time
     */
    eProsima_user_DllExport void time(
            uint64_t _time);

    /*!
     * @brief This function returns the value of member time
     * @return Value of member time
     */
    eProsima_user_DllExport uint64_t time() const;

    /*!
     * @brief This function returns a reference to member time
     * @return Reference to member time
     */
    eProsima_user_DllExport uint64_t& time();

    /*!
     * @brief This function sets a value in member allAlive
     * @param _allAlive New value for member allAlive
     */
    eProsima_user_DllExport void allAlive(
            bool _allAlive);

    /*!
     * @brief This function returns the value of member allAlive
     * @return Value of member allAlive
     */
    eProsima_user_DllExport bool allAlive() const;

    /*!
     * @brief This function returns a reference to member allAlive
     * @return Reference to member allAlive
     */
    eProsima_user_DllExport bool& allAlive();

    /*!
     * @brief This function sets a value in member ahrsAlive
     * @param _ahrsAlive New value for member ahrsAlive
     */
    eProsima_user_DllExport void ahrsAlive(
            bool _ahrsAlive);

    /*!
     * @brief This function returns the value of member ahrsAlive
     * @return Value of member ahrsAlive
     */
    eProsima_user_DllExport bool ahrsAlive() const;

    /*!
     * @brief This function returns a reference to member ahrsAlive
     * @return Reference to member ahrsAlive
     */
    eProsima_user_DllExport bool& ahrsAlive();

    /*!
     * @brief This function sets a value in member airAlive
     * @param _airAlive New value for member airAlive
     */
    eProsima_user_DllExport void airAlive(
            bool _airAlive);

    /*!
     * @brief This function returns the value of member airAlive
     * @return Value of member airAlive
     */
    eProsima_user_DllExport bool airAlive() const;

    /*!
     * @brief This function returns a reference to member airAlive
     * @return Reference to member airAlive
     */
    eProsima_user_DllExport bool& airAlive();

    /*!
     * @brief This function sets a value in member ctrlAlive
     * @param _ctrlAlive New value for member ctrlAlive
     */
    eProsima_user_DllExport void ctrlAlive(
            bool _ctrlAlive);

    /*!
     * @brief This function returns the value of member ctrlAlive
     * @return Value of member ctrlAlive
     */
    eProsima_user_DllExport bool ctrlAlive() const;

    /*!
     * @brief This function returns a reference to member ctrlAlive
     * @return Reference to member ctrlAlive
     */
    eProsima_user_DllExport bool& ctrlAlive();

    /*!
     * @brief This function sets a value in member downlinkAlive
     * @param _downlinkAlive New value for member downlinkAlive
     */
    eProsima_user_DllExport void downlinkAlive(
            bool _downlinkAlive);

    /*!
     * @brief This function returns the value of member downlinkAlive
     * @return Value of member downlinkAlive
     */
    eProsima_user_DllExport bool downlinkAlive() const;

    /*!
     * @brief This function returns a reference to member downlinkAlive
     * @return Reference to member downlinkAlive
     */
    eProsima_user_DllExport bool& downlinkAlive();

    /*!
     * @brief This function sets a value in member gpsAlive
     * @param _gpsAlive New value for member gpsAlive
     */
    eProsima_user_DllExport void gpsAlive(
            bool _gpsAlive);

    /*!
     * @brief This function returns the value of member gpsAlive
     * @return Value of member gpsAlive
     */
    eProsima_user_DllExport bool gpsAlive() const;

    /*!
     * @brief This function returns a reference to member gpsAlive
     * @return Reference to member gpsAlive
     */
    eProsima_user_DllExport bool& gpsAlive();

    /*!
     * @brief This function sets a value in member logAlive
     * @param _logAlive New value for member logAlive
     */
    eProsima_user_DllExport void logAlive(
            bool _logAlive);

    /*!
     * @brief This function returns the value of member logAlive
     * @return Value of member logAlive
     */
    eProsima_user_DllExport bool logAlive() const;

    /*!
     * @brief This function returns a reference to member logAlive
     * @return Reference to member logAlive
     */
    eProsima_user_DllExport bool& logAlive();

    /*!
     * @brief This function sets a value in member psuAlive
     * @param _psuAlive New value for member psuAlive
     */
    eProsima_user_DllExport void psuAlive(
            bool _psuAlive);

    /*!
     * @brief This function returns the value of member psuAlive
     * @return Value of member psuAlive
     */
    eProsima_user_DllExport bool psuAlive() const;

    /*!
     * @brief This function returns a reference to member psuAlive
     * @return Reference to member psuAlive
     */
    eProsima_user_DllExport bool& psuAlive();

    /*!
     * @brief This function sets a value in member raiInAlive
     * @param _raiInAlive New value for member raiInAlive
     */
    eProsima_user_DllExport void raiInAlive(
            bool _raiInAlive);

    /*!
     * @brief This function returns the value of member raiInAlive
     * @return Value of member raiInAlive
     */
    eProsima_user_DllExport bool raiInAlive() const;

    /*!
     * @brief This function returns a reference to member raiInAlive
     * @return Reference to member raiInAlive
     */
    eProsima_user_DllExport bool& raiInAlive();

    /*!
     * @brief This function sets a value in member raiOutAlive
     * @param _raiOutAlive New value for member raiOutAlive
     */
    eProsima_user_DllExport void raiOutAlive(
            bool _raiOutAlive);

    /*!
     * @brief This function returns the value of member raiOutAlive
     * @return Value of member raiOutAlive
     */
    eProsima_user_DllExport bool raiOutAlive() const;

    /*!
     * @brief This function returns a reference to member raiOutAlive
     * @return Reference to member raiOutAlive
     */
    eProsima_user_DllExport bool& raiOutAlive();

    /*!
     * @brief This function sets a value in member sFusionAlive
     * @param _sFusionAlive New value for member sFusionAlive
     */
    eProsima_user_DllExport void sFusionAlive(
            bool _sFusionAlive);

    /*!
     * @brief This function returns the value of member sFusionAlive
     * @return Value of member sFusionAlive
     */
    eProsima_user_DllExport bool sFusionAlive() const;

    /*!
     * @brief This function returns a reference to member sFusionAlive
     * @return Reference to member sFusionAlive
     */
    eProsima_user_DllExport bool& sFusionAlive();

    /*!
     * @brief This function sets a value in member uplinkAlive
     * @param _uplinkAlive New value for member uplinkAlive
     */
    eProsima_user_DllExport void uplinkAlive(
            bool _uplinkAlive);

    /*!
     * @brief This function returns the value of member uplinkAlive
     * @return Value of member uplinkAlive
     */
    eProsima_user_DllExport bool uplinkAlive() const;

    /*!
     * @brief This function returns a reference to member uplinkAlive
     * @return Reference to member uplinkAlive
     */
    eProsima_user_DllExport bool& uplinkAlive();

    /*!
     * @brief This function sets a value in member alive
     * @param _alive New value for member alive
     */
    eProsima_user_DllExport void alive(
            bool _alive);

    /*!
     * @brief This function returns the value of member alive
     * @return Value of member alive
     */
    eProsima_user_DllExport bool alive() const;

    /*!
     * @brief This function returns a reference to member alive
     * @return Reference to member alive
     */
    eProsima_user_DllExport bool& alive();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const DataWatchdog& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    uint64_t m_time;
    bool m_allAlive;
    bool m_ahrsAlive;
    bool m_airAlive;
    bool m_ctrlAlive;
    bool m_downlinkAlive;
    bool m_gpsAlive;
    bool m_logAlive;
    bool m_psuAlive;
    bool m_raiInAlive;
    bool m_raiOutAlive;
    bool m_sFusionAlive;
    bool m_uplinkAlive;
    bool m_alive;
};

#endif // _DATAWATCHDOG_H_