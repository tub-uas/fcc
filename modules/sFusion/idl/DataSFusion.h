// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataSFusion.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _DATASFUSION_H_
#define _DATASFUSION_H_


#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DataSFusion_SOURCE)
#define DataSFusion_DllAPI __declspec( dllexport )
#else
#define DataSFusion_DllAPI __declspec( dllimport )
#endif // DataSFusion_SOURCE
#else
#define DataSFusion_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define DataSFusion_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure DataSFusion defined by the user in the IDL file.
 * @ingroup DATASFUSION
 */
class DataSFusion
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport DataSFusion();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~DataSFusion();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion(
            const DataSFusion& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion(
            DataSFusion&& x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion& operator =(
            const DataSFusion& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion& operator =(
            DataSFusion&& x);

    /*!
     * @brief This function sets a value in member time
     * @param _time New value for member time
     */
    eProsima_user_DllExport void time(
            uint64_t _time);

    /*!
     * @brief This function returns the value of member time
     * @return Value of member time
     */
    eProsima_user_DllExport uint64_t time() const;

    /*!
     * @brief This function returns a reference to member time
     * @return Reference to member time
     */
    eProsima_user_DllExport uint64_t& time();

    /*!
     * @brief This function sets a value in member p
     * @param _p New value for member p
     */
    eProsima_user_DllExport void p(
            double _p);

    /*!
     * @brief This function returns the value of member p
     * @return Value of member p
     */
    eProsima_user_DllExport double p() const;

    /*!
     * @brief This function returns a reference to member p
     * @return Reference to member p
     */
    eProsima_user_DllExport double& p();

    /*!
     * @brief This function sets a value in member q
     * @param _q New value for member q
     */
    eProsima_user_DllExport void q(
            double _q);

    /*!
     * @brief This function returns the value of member q
     * @return Value of member q
     */
    eProsima_user_DllExport double q() const;

    /*!
     * @brief This function returns a reference to member q
     * @return Reference to member q
     */
    eProsima_user_DllExport double& q();

    /*!
     * @brief This function sets a value in member r
     * @param _r New value for member r
     */
    eProsima_user_DllExport void r(
            double _r);

    /*!
     * @brief This function returns the value of member r
     * @return Value of member r
     */
    eProsima_user_DllExport double r() const;

    /*!
     * @brief This function returns a reference to member r
     * @return Reference to member r
     */
    eProsima_user_DllExport double& r();

    /*!
     * @brief This function sets a value in member a_x
     * @param _a_x New value for member a_x
     */
    eProsima_user_DllExport void a_x(
            double _a_x);

    /*!
     * @brief This function returns the value of member a_x
     * @return Value of member a_x
     */
    eProsima_user_DllExport double a_x() const;

    /*!
     * @brief This function returns a reference to member a_x
     * @return Reference to member a_x
     */
    eProsima_user_DllExport double& a_x();

    /*!
     * @brief This function sets a value in member a_y
     * @param _a_y New value for member a_y
     */
    eProsima_user_DllExport void a_y(
            double _a_y);

    /*!
     * @brief This function returns the value of member a_y
     * @return Value of member a_y
     */
    eProsima_user_DllExport double a_y() const;

    /*!
     * @brief This function returns a reference to member a_y
     * @return Reference to member a_y
     */
    eProsima_user_DllExport double& a_y();

    /*!
     * @brief This function sets a value in member a_z
     * @param _a_z New value for member a_z
     */
    eProsima_user_DllExport void a_z(
            double _a_z);

    /*!
     * @brief This function returns the value of member a_z
     * @return Value of member a_z
     */
    eProsima_user_DllExport double a_z() const;

    /*!
     * @brief This function returns a reference to member a_z
     * @return Reference to member a_z
     */
    eProsima_user_DllExport double& a_z();

    /*!
     * @brief This function sets a value in member true_airspeed
     * @param _true_airspeed New value for member true_airspeed
     */
    eProsima_user_DllExport void true_airspeed(
            double _true_airspeed);

    /*!
     * @brief This function returns the value of member true_airspeed
     * @return Value of member true_airspeed
     */
    eProsima_user_DllExport double true_airspeed() const;

    /*!
     * @brief This function returns a reference to member true_airspeed
     * @return Reference to member true_airspeed
     */
    eProsima_user_DllExport double& true_airspeed();

    /*!
     * @brief This function sets a value in member indicated_airspeed
     * @param _indicated_airspeed New value for member indicated_airspeed
     */
    eProsima_user_DllExport void indicated_airspeed(
            double _indicated_airspeed);

    /*!
     * @brief This function returns the value of member indicated_airspeed
     * @return Value of member indicated_airspeed
     */
    eProsima_user_DllExport double indicated_airspeed() const;

    /*!
     * @brief This function returns a reference to member indicated_airspeed
     * @return Reference to member indicated_airspeed
     */
    eProsima_user_DllExport double& indicated_airspeed();

    /*!
     * @brief This function sets a value in member density
     * @param _density New value for member density
     */
    eProsima_user_DllExport void density(
            double _density);

    /*!
     * @brief This function returns the value of member density
     * @return Value of member density
     */
    eProsima_user_DllExport double density() const;

    /*!
     * @brief This function returns a reference to member density
     * @return Reference to member density
     */
    eProsima_user_DllExport double& density();

    /*!
     * @brief This function sets a value in member dynamic_pressure
     * @param _dynamic_pressure New value for member dynamic_pressure
     */
    eProsima_user_DllExport void dynamic_pressure(
            double _dynamic_pressure);

    /*!
     * @brief This function returns the value of member dynamic_pressure
     * @return Value of member dynamic_pressure
     */
    eProsima_user_DllExport double dynamic_pressure() const;

    /*!
     * @brief This function returns a reference to member dynamic_pressure
     * @return Reference to member dynamic_pressure
     */
    eProsima_user_DllExport double& dynamic_pressure();

    /*!
     * @brief This function sets a value in member barometric_pressure
     * @param _barometric_pressure New value for member barometric_pressure
     */
    eProsima_user_DllExport void barometric_pressure(
            double _barometric_pressure);

    /*!
     * @brief This function returns the value of member barometric_pressure
     * @return Value of member barometric_pressure
     */
    eProsima_user_DllExport double barometric_pressure() const;

    /*!
     * @brief This function returns a reference to member barometric_pressure
     * @return Reference to member barometric_pressure
     */
    eProsima_user_DllExport double& barometric_pressure();

    /*!
     * @brief This function sets a value in member height_rate
     * @param _height_rate New value for member height_rate
     */
    eProsima_user_DllExport void height_rate(
            double _height_rate);

    /*!
     * @brief This function returns the value of member height_rate
     * @return Value of member height_rate
     */
    eProsima_user_DllExport double height_rate() const;

    /*!
     * @brief This function returns a reference to member height_rate
     * @return Reference to member height_rate
     */
    eProsima_user_DllExport double& height_rate();

    /*!
     * @brief This function sets a value in member height
     * @param _height New value for member height
     */
    eProsima_user_DllExport void height(
            double _height);

    /*!
     * @brief This function returns the value of member height
     * @return Value of member height
     */
    eProsima_user_DllExport double height() const;

    /*!
     * @brief This function returns a reference to member height
     * @return Reference to member height
     */
    eProsima_user_DllExport double& height();

    /*!
     * @brief This function sets a value in member ssa
     * @param _ssa New value for member ssa
     */
    eProsima_user_DllExport void ssa(
            double _ssa);

    /*!
     * @brief This function returns the value of member ssa
     * @return Value of member ssa
     */
    eProsima_user_DllExport double ssa() const;

    /*!
     * @brief This function returns a reference to member ssa
     * @return Reference to member ssa
     */
    eProsima_user_DllExport double& ssa();

    /*!
     * @brief This function sets a value in member aoa
     * @param _aoa New value for member aoa
     */
    eProsima_user_DllExport void aoa(
            double _aoa);

    /*!
     * @brief This function returns the value of member aoa
     * @return Value of member aoa
     */
    eProsima_user_DllExport double aoa() const;

    /*!
     * @brief This function returns a reference to member aoa
     * @return Reference to member aoa
     */
    eProsima_user_DllExport double& aoa();

    /*!
     * @brief This function sets a value in member gamma
     * @param _gamma New value for member gamma
     */
    eProsima_user_DllExport void gamma(
            double _gamma);

    /*!
     * @brief This function returns the value of member gamma
     * @return Value of member gamma
     */
    eProsima_user_DllExport double gamma() const;

    /*!
     * @brief This function returns a reference to member gamma
     * @return Reference to member gamma
     */
    eProsima_user_DllExport double& gamma();

    /*!
     * @brief This function sets a value in member phi
     * @param _phi New value for member phi
     */
    eProsima_user_DllExport void phi(
            double _phi);

    /*!
     * @brief This function returns the value of member phi
     * @return Value of member phi
     */
    eProsima_user_DllExport double phi() const;

    /*!
     * @brief This function returns a reference to member phi
     * @return Reference to member phi
     */
    eProsima_user_DllExport double& phi();

    /*!
     * @brief This function sets a value in member the
     * @param _the New value for member the
     */
    eProsima_user_DllExport void the(
            double _the);

    /*!
     * @brief This function returns the value of member the
     * @return Value of member the
     */
    eProsima_user_DllExport double the() const;

    /*!
     * @brief This function returns a reference to member the
     * @return Reference to member the
     */
    eProsima_user_DllExport double& the();

    /*!
     * @brief This function sets a value in member psi
     * @param _psi New value for member psi
     */
    eProsima_user_DllExport void psi(
            double _psi);

    /*!
     * @brief This function returns the value of member psi
     * @return Value of member psi
     */
    eProsima_user_DllExport double psi() const;

    /*!
     * @brief This function returns a reference to member psi
     * @return Reference to member psi
     */
    eProsima_user_DllExport double& psi();

    /*!
     * @brief This function sets a value in member latitude
     * @param _latitude New value for member latitude
     */
    eProsima_user_DllExport void latitude(
            double _latitude);

    /*!
     * @brief This function returns the value of member latitude
     * @return Value of member latitude
     */
    eProsima_user_DllExport double latitude() const;

    /*!
     * @brief This function returns a reference to member latitude
     * @return Reference to member latitude
     */
    eProsima_user_DllExport double& latitude();

    /*!
     * @brief This function sets a value in member longitude
     * @param _longitude New value for member longitude
     */
    eProsima_user_DllExport void longitude(
            double _longitude);

    /*!
     * @brief This function returns the value of member longitude
     * @return Value of member longitude
     */
    eProsima_user_DllExport double longitude() const;

    /*!
     * @brief This function returns a reference to member longitude
     * @return Reference to member longitude
     */
    eProsima_user_DllExport double& longitude();

    /*!
     * @brief This function sets a value in member posN
     * @param _posN New value for member posN
     */
    eProsima_user_DllExport void posN(
            double _posN);

    /*!
     * @brief This function returns the value of member posN
     * @return Value of member posN
     */
    eProsima_user_DllExport double posN() const;

    /*!
     * @brief This function returns a reference to member posN
     * @return Reference to member posN
     */
    eProsima_user_DllExport double& posN();

    /*!
     * @brief This function sets a value in member posE
     * @param _posE New value for member posE
     */
    eProsima_user_DllExport void posE(
            double _posE);

    /*!
     * @brief This function returns the value of member posE
     * @return Value of member posE
     */
    eProsima_user_DllExport double posE() const;

    /*!
     * @brief This function returns a reference to member posE
     * @return Reference to member posE
     */
    eProsima_user_DllExport double& posE();

    /*!
     * @brief This function sets a value in member posD
     * @param _posD New value for member posD
     */
    eProsima_user_DllExport void posD(
            double _posD);

    /*!
     * @brief This function returns the value of member posD
     * @return Value of member posD
     */
    eProsima_user_DllExport double posD() const;

    /*!
     * @brief This function returns a reference to member posD
     * @return Reference to member posD
     */
    eProsima_user_DllExport double& posD();

    /*!
     * @brief This function sets a value in member speedN
     * @param _speedN New value for member speedN
     */
    eProsima_user_DllExport void speedN(
            double _speedN);

    /*!
     * @brief This function returns the value of member speedN
     * @return Value of member speedN
     */
    eProsima_user_DllExport double speedN() const;

    /*!
     * @brief This function returns a reference to member speedN
     * @return Reference to member speedN
     */
    eProsima_user_DllExport double& speedN();

    /*!
     * @brief This function sets a value in member speedE
     * @param _speedE New value for member speedE
     */
    eProsima_user_DllExport void speedE(
            double _speedE);

    /*!
     * @brief This function returns the value of member speedE
     * @return Value of member speedE
     */
    eProsima_user_DllExport double speedE() const;

    /*!
     * @brief This function returns a reference to member speedE
     * @return Reference to member speedE
     */
    eProsima_user_DllExport double& speedE();

    /*!
     * @brief This function sets a value in member speedD
     * @param _speedD New value for member speedD
     */
    eProsima_user_DllExport void speedD(
            double _speedD);

    /*!
     * @brief This function returns the value of member speedD
     * @return Value of member speedD
     */
    eProsima_user_DllExport double speedD() const;

    /*!
     * @brief This function returns a reference to member speedD
     * @return Reference to member speedD
     */
    eProsima_user_DllExport double& speedD();

    /*!
     * @brief This function sets a value in member windN
     * @param _windN New value for member windN
     */
    eProsima_user_DllExport void windN(
            double _windN);

    /*!
     * @brief This function returns the value of member windN
     * @return Value of member windN
     */
    eProsima_user_DllExport double windN() const;

    /*!
     * @brief This function returns a reference to member windN
     * @return Reference to member windN
     */
    eProsima_user_DllExport double& windN();

    /*!
     * @brief This function sets a value in member windE
     * @param _windE New value for member windE
     */
    eProsima_user_DllExport void windE(
            double _windE);

    /*!
     * @brief This function returns the value of member windE
     * @return Value of member windE
     */
    eProsima_user_DllExport double windE() const;

    /*!
     * @brief This function returns a reference to member windE
     * @return Reference to member windE
     */
    eProsima_user_DllExport double& windE();

    /*!
     * @brief This function sets a value in member windD
     * @param _windD New value for member windD
     */
    eProsima_user_DllExport void windD(
            double _windD);

    /*!
     * @brief This function returns the value of member windD
     * @return Value of member windD
     */
    eProsima_user_DllExport double windD() const;

    /*!
     * @brief This function returns a reference to member windD
     * @return Reference to member windD
     */
    eProsima_user_DllExport double& windD();

    /*!
     * @brief This function sets a value in member alive
     * @param _alive New value for member alive
     */
    eProsima_user_DllExport void alive(
            bool _alive);

    /*!
     * @brief This function returns the value of member alive
     * @return Value of member alive
     */
    eProsima_user_DllExport bool alive() const;

    /*!
     * @brief This function returns a reference to member alive
     * @return Reference to member alive
     */
    eProsima_user_DllExport bool& alive();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const DataSFusion& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    uint64_t m_time;
    double m_p;
    double m_q;
    double m_r;
    double m_a_x;
    double m_a_y;
    double m_a_z;
    double m_true_airspeed;
    double m_indicated_airspeed;
    double m_density;
    double m_dynamic_pressure;
    double m_barometric_pressure;
    double m_height_rate;
    double m_height;
    double m_ssa;
    double m_aoa;
    double m_gamma;
    double m_phi;
    double m_the;
    double m_psi;
    double m_latitude;
    double m_longitude;
    double m_posN;
    double m_posE;
    double m_posD;
    double m_speedN;
    double m_speedE;
    double m_speedD;
    double m_windN;
    double m_windE;
    double m_windD;
    bool m_alive;
};

#endif // _DATASFUSION_H_