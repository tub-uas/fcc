// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file DataSFusion.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _DATASFUSION_H_
#define _DATASFUSION_H_

// TODO Poner en el contexto.

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif
#else
#define eProsima_user_DllExport
#endif

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DataSFusion_SOURCE)
#define DataSFusion_DllAPI __declspec( dllexport )
#else
#define DataSFusion_DllAPI __declspec( dllimport )
#endif // DataSFusion_SOURCE
#else
#define DataSFusion_DllAPI
#endif
#else
#define DataSFusion_DllAPI
#endif // _WIN32

namespace eprosima
{
    namespace fastcdr
    {
        class Cdr;
    }
}


/*!
 * @brief This class represents the structure DataSFusion defined by the user in the IDL file.
 * @ingroup DATASFUSION
 */
class DataSFusion
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport DataSFusion();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~DataSFusion();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion(const DataSFusion &x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion(DataSFusion &&x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion& operator=(const DataSFusion &x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object DataSFusion that will be copied.
     */
    eProsima_user_DllExport DataSFusion& operator=(DataSFusion &&x);

    /*!
     * @brief This function sets a value in member time
     * @param _time New value for member time
     */
    eProsima_user_DllExport void time(uint64_t _time);

    /*!
     * @brief This function returns the value of member time
     * @return Value of member time
     */
    eProsima_user_DllExport uint64_t time() const;

    /*!
     * @brief This function returns a reference to member time
     * @return Reference to member time
     */
    eProsima_user_DllExport uint64_t& time();

    /*!
     * @brief This function sets a value in member phi
     * @param _phi New value for member phi
     */
    eProsima_user_DllExport void phi(float _phi);

    /*!
     * @brief This function returns the value of member phi
     * @return Value of member phi
     */
    eProsima_user_DllExport float phi() const;

    /*!
     * @brief This function returns a reference to member phi
     * @return Reference to member phi
     */
    eProsima_user_DllExport float& phi();

    /*!
     * @brief This function sets a value in member the
     * @param _the New value for member the
     */
    eProsima_user_DllExport void the(float _the);

    /*!
     * @brief This function returns the value of member the
     * @return Value of member the
     */
    eProsima_user_DllExport float the() const;

    /*!
     * @brief This function returns a reference to member the
     * @return Reference to member the
     */
    eProsima_user_DllExport float& the();

    /*!
     * @brief This function sets a value in member psi
     * @param _psi New value for member psi
     */
    eProsima_user_DllExport void psi(float _psi);

    /*!
     * @brief This function returns the value of member psi
     * @return Value of member psi
     */
    eProsima_user_DllExport float psi() const;

    /*!
     * @brief This function returns a reference to member psi
     * @return Reference to member psi
     */
    eProsima_user_DllExport float& psi();

    /*!
     * @brief This function sets a value in member p0
     * @param _p0 New value for member p0
     */
    eProsima_user_DllExport void p0(float _p0);

    /*!
     * @brief This function returns the value of member p0
     * @return Value of member p0
     */
    eProsima_user_DllExport float p0() const;

    /*!
     * @brief This function returns a reference to member p0
     * @return Reference to member p0
     */
    eProsima_user_DllExport float& p0();

    /*!
     * @brief This function sets a value in member p1
     * @param _p1 New value for member p1
     */
    eProsima_user_DllExport void p1(float _p1);

    /*!
     * @brief This function returns the value of member p1
     * @return Value of member p1
     */
    eProsima_user_DllExport float p1() const;

    /*!
     * @brief This function returns a reference to member p1
     * @return Reference to member p1
     */
    eProsima_user_DllExport float& p1();

    /*!
     * @brief This function sets a value in member p2
     * @param _p2 New value for member p2
     */
    eProsima_user_DllExport void p2(float _p2);

    /*!
     * @brief This function returns the value of member p2
     * @return Value of member p2
     */
    eProsima_user_DllExport float p2() const;

    /*!
     * @brief This function returns a reference to member p2
     * @return Reference to member p2
     */
    eProsima_user_DllExport float& p2();

    /*!
     * @brief This function sets a value in member p3
     * @param _p3 New value for member p3
     */
    eProsima_user_DllExport void p3(float _p3);

    /*!
     * @brief This function returns the value of member p3
     * @return Value of member p3
     */
    eProsima_user_DllExport float p3() const;

    /*!
     * @brief This function returns a reference to member p3
     * @return Reference to member p3
     */
    eProsima_user_DllExport float& p3();

    /*!
     * @brief This function sets a value in member press
     * @param _press New value for member press
     */
    eProsima_user_DllExport void press(float _press);

    /*!
     * @brief This function returns the value of member press
     * @return Value of member press
     */
    eProsima_user_DllExport float press() const;

    /*!
     * @brief This function returns a reference to member press
     * @return Reference to member press
     */
    eProsima_user_DllExport float& press();

    /*!
     * @brief This function sets a value in member temp
     * @param _temp New value for member temp
     */
    eProsima_user_DllExport void temp(float _temp);

    /*!
     * @brief This function returns the value of member temp
     * @return Value of member temp
     */
    eProsima_user_DllExport float temp() const;

    /*!
     * @brief This function returns a reference to member temp
     * @return Reference to member temp
     */
    eProsima_user_DllExport float& temp();

    /*!
     * @brief This function sets a value in member posN
     * @param _posN New value for member posN
     */
    eProsima_user_DllExport void posN(float _posN);

    /*!
     * @brief This function returns the value of member posN
     * @return Value of member posN
     */
    eProsima_user_DllExport float posN() const;

    /*!
     * @brief This function returns a reference to member posN
     * @return Reference to member posN
     */
    eProsima_user_DllExport float& posN();

    /*!
     * @brief This function sets a value in member posE
     * @param _posE New value for member posE
     */
    eProsima_user_DllExport void posE(float _posE);

    /*!
     * @brief This function returns the value of member posE
     * @return Value of member posE
     */
    eProsima_user_DllExport float posE() const;

    /*!
     * @brief This function returns a reference to member posE
     * @return Reference to member posE
     */
    eProsima_user_DllExport float& posE();

    /*!
     * @brief This function sets a value in member posD
     * @param _posD New value for member posD
     */
    eProsima_user_DllExport void posD(float _posD);

    /*!
     * @brief This function returns the value of member posD
     * @return Value of member posD
     */
    eProsima_user_DllExport float posD() const;

    /*!
     * @brief This function returns a reference to member posD
     * @return Reference to member posD
     */
    eProsima_user_DllExport float& posD();

    /*!
     * @brief This function sets a value in member speedX
     * @param _speedX New value for member speedX
     */
    eProsima_user_DllExport void speedX(float _speedX);

    /*!
     * @brief This function returns the value of member speedX
     * @return Value of member speedX
     */
    eProsima_user_DllExport float speedX() const;

    /*!
     * @brief This function returns a reference to member speedX
     * @return Reference to member speedX
     */
    eProsima_user_DllExport float& speedX();

    /*!
     * @brief This function sets a value in member speedY
     * @param _speedY New value for member speedY
     */
    eProsima_user_DllExport void speedY(float _speedY);

    /*!
     * @brief This function returns the value of member speedY
     * @return Value of member speedY
     */
    eProsima_user_DllExport float speedY() const;

    /*!
     * @brief This function returns a reference to member speedY
     * @return Reference to member speedY
     */
    eProsima_user_DllExport float& speedY();

    /*!
     * @brief This function sets a value in member speedZ
     * @param _speedZ New value for member speedZ
     */
    eProsima_user_DllExport void speedZ(float _speedZ);

    /*!
     * @brief This function returns the value of member speedZ
     * @return Value of member speedZ
     */
    eProsima_user_DllExport float speedZ() const;

    /*!
     * @brief This function returns a reference to member speedZ
     * @return Reference to member speedZ
     */
    eProsima_user_DllExport float& speedZ();

    /*!
     * @brief This function sets a value in member windX
     * @param _windX New value for member windX
     */
    eProsima_user_DllExport void windX(float _windX);

    /*!
     * @brief This function returns the value of member windX
     * @return Value of member windX
     */
    eProsima_user_DllExport float windX() const;

    /*!
     * @brief This function returns a reference to member windX
     * @return Reference to member windX
     */
    eProsima_user_DllExport float& windX();

    /*!
     * @brief This function sets a value in member windY
     * @param _windY New value for member windY
     */
    eProsima_user_DllExport void windY(float _windY);

    /*!
     * @brief This function returns the value of member windY
     * @return Value of member windY
     */
    eProsima_user_DllExport float windY() const;

    /*!
     * @brief This function returns a reference to member windY
     * @return Reference to member windY
     */
    eProsima_user_DllExport float& windY();

    /*!
     * @brief This function sets a value in member windZ
     * @param _windZ New value for member windZ
     */
    eProsima_user_DllExport void windZ(float _windZ);

    /*!
     * @brief This function returns the value of member windZ
     * @return Value of member windZ
     */
    eProsima_user_DllExport float windZ() const;

    /*!
     * @brief This function returns a reference to member windZ
     * @return Reference to member windZ
     */
    eProsima_user_DllExport float& windZ();

    /*!
     * @brief This function sets a value in member ssa
     * @param _ssa New value for member ssa
     */
    eProsima_user_DllExport void ssa(float _ssa);

    /*!
     * @brief This function returns the value of member ssa
     * @return Value of member ssa
     */
    eProsima_user_DllExport float ssa() const;

    /*!
     * @brief This function returns a reference to member ssa
     * @return Reference to member ssa
     */
    eProsima_user_DllExport float& ssa();

    /*!
     * @brief This function sets a value in member aoa
     * @param _aoa New value for member aoa
     */
    eProsima_user_DllExport void aoa(float _aoa);

    /*!
     * @brief This function returns the value of member aoa
     * @return Value of member aoa
     */
    eProsima_user_DllExport float aoa() const;

    /*!
     * @brief This function returns a reference to member aoa
     * @return Reference to member aoa
     */
    eProsima_user_DllExport float& aoa();

    /*!
     * @brief This function sets a value in member gamma
     * @param _gamma New value for member gamma
     */
    eProsima_user_DllExport void gamma(float _gamma);

    /*!
     * @brief This function returns the value of member gamma
     * @return Value of member gamma
     */
    eProsima_user_DllExport float gamma() const;

    /*!
     * @brief This function returns a reference to member gamma
     * @return Reference to member gamma
     */
    eProsima_user_DllExport float& gamma();

    /*!
     * @brief This function sets a value in member alive
     * @param _alive New value for member alive
     */
    eProsima_user_DllExport void alive(bool _alive);

    /*!
     * @brief This function returns the value of member alive
     * @return Value of member alive
     */
    eProsima_user_DllExport bool alive() const;

    /*!
     * @brief This function returns a reference to member alive
     * @return Reference to member alive
     */
    eProsima_user_DllExport bool& alive();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(const DataSFusion& data, size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(eprosima::fastcdr::Cdr &cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(eprosima::fastcdr::Cdr &cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(eprosima::fastcdr::Cdr &cdr) const;

private:
    uint64_t m_time;
    float m_phi;
    float m_the;
    float m_psi;
    float m_p0;
    float m_p1;
    float m_p2;
    float m_p3;
    float m_press;
    float m_temp;
    float m_posN;
    float m_posE;
    float m_posD;
    float m_speedX;
    float m_speedY;
    float m_speedZ;
    float m_windX;
    float m_windY;
    float m_windZ;
    float m_ssa;
    float m_aoa;
    float m_gamma;
    bool m_alive;
};

#endif // _DATASFUSION_H_